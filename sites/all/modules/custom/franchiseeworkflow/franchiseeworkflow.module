<?php

/**
 * @file
 * Hooks provided by the workflow module.
 */

/**
 * Implements franchiseeworkflow_workflow().
 *
 * @param $op
 *   The current workflow operation: 'transition pre' or 'transition post'.
 * @param $old_state
 *   The state ID of the current state.
 * @param $new_state
 *   The state ID of the new state.
 * @param $node
 *   The node whose workflow state is changing.
 */
function franchiseeworkflow_workflow($op, $old_state, $new_state, $node) {

  switch ($op) {
    case 'transition pre':
      // The workflow module does nothing during this operation.
      // But your module's Implements the workflow hook could
      // return FALSE here and veto the transition.
      break;

    case 'transition post':
      if ($old_state == '7' && $new_state == '8') {

        if ($node->type == 'application') {
          $userName = $node->field_first_name[LANGUAGE_NONE]['0']['value'] . ' ' . $node->field_middle_name[LANGUAGE_NONE]['0']['value'] . ' ' . $node->field_last_name[LANGUAGE_NONE]['0']['value'];
          $mail = $node->field_email['und']['0']['value'];
          $address1 = $node->field_address_1[LANGUAGE_NONE]['0']['value'];
          $address2 = $node->field_address_2[LANGUAGE_NONE]['0']['value'];
          $city = $node->field_city_list[LANGUAGE_NONE]['0']['value'];
          $pincode = $node->field_pin_code[LANGUAGE_NONE]['0']['value'];
          $mobile = $node->field_mobile_1[LANGUAGE_NONE]['0']['value'];

          $service_url = 'http://middleware-bbd.iksulabeta.com/bbdlogin/user-login/create_franchisee'; // .xml asks for xml data in response
          $post_data = array(
            'username' => $userName,
            'mail' => $mail,
            'address1' => $address1,
            'address2' => $address2,
            'city' => $city,
            'pincode' => $pincode,
            'mobile' => $mobile,
          );
//                    $post_data = http_build_query($post_data, '', '&'); // Format post data as application/x-www-form-urlencoded
//                    // set up the request
//                    $curl = curl_init($service_url);
//                    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);  // have curl_exec return a string
//
//                    curl_setopt($curl, CURLOPT_POST, true);             // do a POST
//                    curl_setopt($curl, CURLOPT_POSTFIELDS, $post_data); // POST this data
//                    // make the request
//                    curl_setopt($curl, CURLOPT_VERBOSE, true); // output to command line
//                    $response = curl_exec($curl);
//                    curl_close($curl);

          $ch = curl_init() or die(curl_error());
          curl_setopt($ch, CURLOPT_POST, 1);
          curl_setopt($ch, CURLOPT_POSTFIELDS, $post_data);
          curl_setopt($ch, CURLOPT_PORT, 443);
          curl_setopt($ch, CURLOPT_URL, $service_url);
          curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
          curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
          curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
          $data1 = curl_exec($ch);
          //dsm(curl_error($ch));
          curl_close($ch);
        }
      }
        
        if($new_state == bigbazaarcrm_application_get_sid_from_state_name('(Applied-KYC Pending)')){
          //Send SMS
          $application_id = $node->field_application_number[LANGUAGE_NONE][0]['value'];
          $mobile = $node->field_mobile_1[LANGUAGE_NONE][0]['value'];
          $tokens = array('application_id' => $application_id);
          sms_configuration_helper_for_sms_template($mobile, 'kyc_pending', $tokens);

          //Send Email
          $email = $node->field_email[LANGUAGE_NONE][0]['value'];
          $params = array(
            'mail_to' => $email,
            'dynamic' => array('application_id' => $application_id),
          );
          entity_email_send('kyc_pending', $params);
        }
        
        if($new_state == bigbazaarcrm_application_get_sid_from_state_name('(Applied-KYC Received)')){
          //Send SMS
          $application_id = $node->field_application_number[LANGUAGE_NONE][0]['value'];
          $mobile = $node->field_mobile_1[LANGUAGE_NONE][0]['value'];
          $tokens = array('application_id' => $application_id);
          sms_configuration_helper_for_sms_template($mobile, 'kyc_received', $tokens);

          //Send Email
          $email = $node->field_email[LANGUAGE_NONE][0]['value'];
          $params = array(
            'mail_to' => $email,
            'dynamic' => array('application_id' => $application_id),
          );
          entity_email_send('kyc_received', $params);
        }
        
        if ($new_state == bigbazaarcrm_application_get_sid_from_state_name('(Applied-KYC Discrepancy)')) {
          //Send SMS
          $application_id = $node->field_application_number[LANGUAGE_NONE][0]['value'];
          $mobile = $node->field_mobile_1[LANGUAGE_NONE][0]['value'];
          $tokens = array('application_id' => $application_id);
          sms_configuration_helper_for_sms_template($mobile, 'kyc_discrepant', $tokens);
          
          //No email to be sent for this case
        }

      if ($new_state == bigbazaarcrm_application_get_sid_from_state_name('(Agreement Copy-Sent)')) {
          //Send SMS
          $application_id = $node->field_application_number[LANGUAGE_NONE][0]['value'];
          $tokens = array('application_id' => $application_id);
          sms_configuration_helper_for_sms_template($node->field_mobile_1[LANGUAGE_NONE][0]['value'], 'agreement_dispatched', $tokens);

          //Send Email
          $email = $node->field_email[LANGUAGE_NONE][0]['value'];
          $params = array(
            'mail_to' => $email,
            'dynamic' => array('application_id' => $application_id),
          );
          entity_email_send('agreement_dispatched', $params);
        }
        
        if ($new_state == bigbazaarcrm_application_get_sid_from_state_name('(Agreement Copy-Not Received)')) {
          //Send SMS
          $application_id = $node->field_application_number[LANGUAGE_NONE][0]['value'];
          $tokens = array('application_id' => $application_id);
          sms_configuration_helper_for_sms_template($node->field_mobile_1[LANGUAGE_NONE][0]['value'], 'agreement_pending', $tokens);

          //Send Email
          $email = $node->field_email[LANGUAGE_NONE][0]['value'];
          $params = array(
            'mail_to' => $email,
            'dynamic' => array('application_id' => $application_id),
          );
          entity_email_send('agreement_pending', $params);
        }
        
        if ($new_state == bigbazaarcrm_application_get_sid_from_state_name('(Agreement Copy-Received)')) {
          //Send SMS
          $application_id = $node->field_application_number[LANGUAGE_NONE][0]['value'];
          $tokens = array('application_id' => $application_id);
          sms_configuration_helper_for_sms_template($node->field_mobile_1[LANGUAGE_NONE][0]['value'], 'agreement_received', $tokens);

          //Send Email
          $email = $node->field_email[LANGUAGE_NONE][0]['value'];
          $params = array(
            'mail_to' => $email,
            'dynamic' => array('application_id' => $application_id),
          );
          entity_email_send('agreement_received', $params);
        }
      break;
    case 'transition delete':
      break;
  }
}
