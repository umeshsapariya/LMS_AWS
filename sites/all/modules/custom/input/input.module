<?php
// $Id$

/**
 * @file
 * Demonstrates use of the Form API.
 *
 * For a full list of elements and attributes, see:
 * http://api.drupal.org/api/drupal/developer--topics--forms_api_reference.html/7
 */

/**
 * Implements hook_menu().
 */
function input_menu() {
  $items['input/examples'] = array(
    'title' => 'Form API examples',
    'description' => 'Example of using the Form API.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('input_simple_form'),
    'access callback' => TRUE,
  );
  
  $items['input/leadthanku'] = array(
    'title' => 'Thank You.',
    'description' => 'Lead Successfully updated Thank You.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('leadthanku_message'),
    'access callback' => TRUE,
  );

  return $items;
}
/**
 * Thanku massage.
 */
function thanku_message($form, &$form_submit) {
  $build = array(
    'header_text' => array(
      '#type' => 'markup',
      '#markup' => '<p>' . t('Your details are successfully registered, we will get back to you shortly.') . '</p>',
    ),    
  );
  return $build;
}

/**
 * Lead Thanku massage.
 */
function leadthanku_message($form, &$form_submit) {
  $build = array(
    'header_text' => array(
      '#type' => 'markup',
      '#markup' => '<p>' . t('Lead status are successfully updated.') . '</p>',
    ),    
  );
  return $build;
}

/**
 * A simple form.
 */
function input_simple_form($form, &$form_submit) {
  $form['color'] = array(
    '#title' => t('Favorite color'),
    '#type' => 'textfield',
    '#required' => TRUE,
    '#description' => t('What is your favorite color? Blue? No, wait-'),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
  );
  return $form;
}

/**
 * Implements hook_form_alter().
 *
 * To find the $form_id, you can ether add an echo $form_id; to print
 * a list of ids to the browser, or use Firebug to inspect the element and
 * conver the 'id' of the form to use underscores.
 */
function input_form_alter(&$form, &$form_state, $form_id) {
  //dsm($form_id);
  switch ($form_id) {
    case 'ezone_leads_node_form':
      //dsm($form);
      $form['actions']['submit']['#submit'][] = 'input_node_submit_page_ezone';
      //add ajax for lead status
      $form['field_ezonefirst_name']['und'][0]['value']['#ajax'] = array(
        'callback' => 'ezonename_callback',
        'wrapper' => 'ezonename_wrapper',
        'method' => 'replace',
        'effect' => 'fade',
      );

      $form['field_ezonelead_status']['und']['form']['field_lsfirst_name']['und'][0]['value']['#prefix'] = '<div id="ezonename_wrapper">';
      $form['field_ezonelead_status']['und']['form']['field_lsfirst_name']['und'][0]['value']['#suffix'] = '</div>';
      if (isset($form_state['values']['field_ezonefirst_name']['und'][0]['value'])) { 
               $form['field_ezonelead_status']['und']['form']['field_lsfirst_name']['und'][0]['value']['#value'] = $form_state['values']['field_ezonefirst_name']['und'][0]['value'];

             }
    //last name
        $form['field_ezonelast_name']['und'][0]['value']['#ajax'] = array(
        'callback' => 'ezonelast_callback',
        'wrapper' => 'ezonelast_wrapper',
        'method' => 'replace',
        'effect' => 'fade',
      );
       $form['field_ezonelead_status']['und']['form']['field_lslast_name']['und'][0]['value']['#prefix'] = '<div id="ezonelast_wrapper">';
      $form['field_ezonelead_status']['und']['form']['field_lslast_name']['und'][0]['value']['#suffix'] = '</div>';
       
       if (isset($form_state['values']['field_ezonelast_name']['und'][0]['value'])) { 
               $form['field_ezonelead_status']['und']['form']['field_lslast_name']['und'][0]['value']['#value'] = $form_state['values']['field_ezonelast_name']['und'][0]['value'];

             }


      break;

    case 'big_bazaar_leads_node_form':
      //dsm($form);
      $form['actions']['submit']['#submit'][] = 'input_node_submit_page_ezone';
      break;

    case 't24_leads_node_form':
      //dsm($form);
      $form['actions']['submit']['#submit'][] = 'input_node_submit_page_ezone';
      break;


    case 'lead_status_node_form':
      //dsm($form);
      $form['field_lslead_name']['und'][0]['value']['#value'] = $form['title']['#default_value'];
      $form['field_lslead_name']['und'][0]['#disabled'] = TRUE;
      $form['field_lscurrent_status']['und'][0]['#disabled'] = TRUE;

      $form['actions']['submit']['#submit'][] = 'input_node_submit_page_leadpage';

       //add ajax
       $form['field_lsupdate_status']['und']['#ajax'] = array(
        'callback' => 'ezoneleadstatus_callback',
        'wrapper' => 'ezoneleadstatus_wrapper',
        'method' => 'replace',
        'effect' => 'fade',
      );
       $form['field_lscurrent_status']['und'][0]['value']['#prefix'] = '<div id="ezoneleadstatus_wrapper">';
      $form['field_lscurrent_status']['und'][0]['value']['#suffix'] = '</div>';

        if (isset($form_state['values']['field_lsupdate_status']['und'][0]['value'])) { 
               $form['field_lscurrent_status']['und'][0]['value']['#value'] = $form_state['values']['field_lsupdate_status']['und'][0]['value'];

             }
             else{
              $form['field_lscurrent_status']['und'][0]['value']['#default_value'] = $form['field_lsupdate_status']['und']['#default_value'][0];
             }
      break;
  }


  return;
}

function input_node_submit_page_ezone($form, &$form_state) {
  $form_state['redirect'] = 'input/thanku';
}

function input_node_submit_page_leadpage($form, &$form_state) {
  $form_state['redirect'] = 'input/leadthanku';
}

//lead status callback
function ezonename_callback($form, $form_state) {
  //dsm($form_state);
  return $form['field_ezonelead_status']['und']['form']['field_lsfirst_name'];
}

function ezonelast_callback($form, $form_state) {
  //dsm($form_state);
  return $form['field_ezonelead_status']['und']['form']['field_lslast_name'];
}

function ezoneleadstatus_callback($form, $form_state) {
  //dsm($form_state);
  return $form['field_lscurrent_status'];
}